akka {
  loglevel = DEBUG
}

mySpecialConfig {
  akka {
    loglevel = DEBUG
  }
}

# routers demo
routerDemo {
  akka {
    actor.deployment {
      # name of the actor '/' means suboardinate of user guardian
      /poolMaster2 {
        router = round-robin-pool
        nr-of-instances = 5
      }

      /groupMaster2 {
        router = round-robin-group
        routees.paths = ["/user/slave_1", "/user/slave_2", "/user/slave_3", "/user/slave_4", "/user/slave_5"]
      }
    }
  }
}

# Dispatchers Demo
my-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor" // executor service to handle which messages to which thread
  thread-pool-executor {
    fixed-pool-size = 3
  }
  throughput = 30
}
dispatchersDemo {
  akka.actor.deployment {
    /rtjvm {
      dispatcher = my-dispatcher
    }
  }
}

# mailboxes demo
#support-ticket-dispatcher {
# mailbox-type = "exercises.part2actors.part5infra.Mailboxes$SupportTicketPriorityMailbox"
#}


mailboxesDemo {
  support-ticket-dispatcher {
    mailbox-type = "exercises.part2actors.part5infra.Mailboxes$SupportTicketPriorityMailbox"
  }
  control-mailbox = "akka.dispatch.UnboundedControlAwareMailbox"

  akka.actor.deployment {
    /altControlActorAware {
      mailbox = control-mailbox
    }
  }
}